Index: app/src/main/res/drawable-v24/ic_launcher_foreground.xml
===================================================================
diff --git a/app/src/main/res/drawable-v24/ic_launcher_foreground.xml b/app/src/main/res/drawable-v24/ic_launcher_foreground.xml
deleted file mode 100644
--- a/app/src/main/res/drawable-v24/ic_launcher_foreground.xml	
+++ /dev/null	
@@ -1,30 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:aapt="http://schemas.android.com/aapt"
-    android:width="108dp"
-    android:height="108dp"
-    android:viewportWidth="108"
-    android:viewportHeight="108">
-    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
-        <aapt:attr name="android:fillColor">
-            <gradient
-                android:endX="85.84757"
-                android:endY="92.4963"
-                android:startX="42.9492"
-                android:startY="49.59793"
-                android:type="linear">
-                <item
-                    android:color="#44000000"
-                    android:offset="0.0" />
-                <item
-                    android:color="#00000000"
-                    android:offset="1.0" />
-            </gradient>
-        </aapt:attr>
-    </path>
-    <path
-        android:fillColor="#FFFFFF"
-        android:fillType="nonZero"
-        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
-        android:strokeWidth="1"
-        android:strokeColor="#00000000" />
-</vector>
\ No newline at end of file
Index: app/src/main/java/com/example/fancywork/navegacion/NavigationGraph.kt
===================================================================
diff --git a/app/src/main/java/com/example/fancywork/navegacion/NavigationGraph.kt b/app/src/main/java/com/example/fancywork/navegacion/NavigationGraph.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/fancywork/navegacion/NavigationGraph.kt	
+++ /dev/null	
@@ -1,174 +0,0 @@
-package com.example.fancywork.navegacion
-
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.LaunchedEffect
-import androidx.navigation.compose.NavHost
-import androidx.navigation.compose.composable
-import androidx.navigation.compose.rememberNavController
-import com.example.fancywork.screens.help.HelpScreen
-import com.example.fancywork.screens.home.HomeScreen
-import com.example.fancywork.screens.home.HomeViewModel
-import com.example.fancywork.screens.notifications.NotificationScreen
-import com.example.fancywork.screens.post.PostScreen
-import com.example.fancywork.screens.profile.ProfileScreen
-import com.example.fancywork.screens.search.SearchScreen
-import com.example.fancywork.screens.settings.SettingsScreen
-import com.example.fancywork.screensLogin.login.LoginScreen
-import com.example.fancywork.screensLogin.login.LoginViewModel
-import com.example.fancywork.screensLogin.register.RegisterScreen
-import com.example.fancywork.screensLogin.register.RegisterViewModel
-import com.example.fancywork.screensLogin.welcome.WelcomeScreen
-import com.example.fancywork.screensLogin.welcome.WelcomeViewModel
-import com.google.firebase.auth.FirebaseAuth
-
-@Composable
-fun NavigationGraph() {
-    val navController = rememberNavController()
-    val auth = FirebaseAuth.getInstance()
-
-    NavHost(
-        navController = navController,
-        startDestination = DestinationsGraph.Welcome.route
-    ) {
-        composable(
-            route = DestinationsGraph.Login.route
-        ) {
-            LoginScreen(
-                loginViewModel = LoginViewModel(),
-                navigateWelcome = {
-                    navController.popBackStack()
-                },
-                navigateRegister = {
-                    navController.navigate(DestinationsGraph.Register.route){
-                         launchSingleTop = true
-                    }
-                },
-                navigateMain = {
-                    navController.navigate(DestinationsMenu.Home.route) {
-                         launchSingleTop = true
-                        popUpTo(DestinationsGraph.Login.route) {
-                            inclusive = true
-                        }
-                    }
-                }
-            )
-        }
-        composable(
-            route = DestinationsGraph.Register.route
-        ) {
-            RegisterScreen(
-                navigateLogin = {
-                    navController.popBackStack()
-                },
-                registerViewModel = RegisterViewModel(),
-                navigateMain = {
-                    navController.navigate(DestinationsMenu.Home.route) {
-                         launchSingleTop = true
-                        popUpTo(DestinationsGraph.Register.route) {
-                            inclusive = true
-                        }
-                    }
-                }
-            )
-        }
-        composable(
-            route = DestinationsMenu.Home.route
-        ) {
-            HomeScreen(
-                homeViewModel = HomeViewModel(),
-                navigateWelcome = {
-                    navController.navigate(DestinationsGraph.Welcome.route) {
-                         launchSingleTop = true
-                        popUpTo(DestinationsMenu.Home.route) {
-                            inclusive = true
-                        }
-                    }
-                },
-                navController = navController
-            )
-        }
-        composable(
-            route = DestinationsGraph.Welcome.route
-        ) {
-            if (auth.currentUser != null) {
-                LaunchedEffect(key1 = Unit) {
-                    navController.navigate(DestinationsMenu.Home.route) {
-                         launchSingleTop = true
-                        popUpTo(DestinationsGraph.Welcome.route) {
-                            inclusive = true
-                        }
-                    }
-                }
-            } else {
-                WelcomeScreen(
-                    navigateLogin = {
-                        navController.navigate(DestinationsGraph.Login.route)
-                    },
-                    welcomeViewModel = WelcomeViewModel(),
-                    navigate = {
-                        navController.navigate(DestinationsMenu.Home.route) {
-                             launchSingleTop = true
-                            popUpTo(DestinationsGraph.Welcome.route) {
-                                inclusive = true
-                            }
-                        }
-                    }
-                )
-            }
-        }
-        composable(
-            route = DestinationsMenu.Search.route
-        ) {
-            SearchScreen(
-                backStack = {
-                    navController.popBackStack()
-                }
-            )
-        }
-        composable(
-            route = DestinationsMenu.Post.route
-        ) {
-            PostScreen(
-                backStack = {
-                    navController.popBackStack()
-                }
-            )
-        }
-        composable(
-            route = DestinationsMenu.Notifications.route
-        ) {
-            NotificationScreen(
-                backStack = {
-                    navController.popBackStack()
-                }
-            )
-        }
-        composable(
-            route = DestinationsMenu.Profile.route
-        ) {
-            ProfileScreen(
-                backStack = {
-                    navController.popBackStack()
-                }
-            )
-        }
-        composable(
-            route = DestinationsMenu.Settings.route
-        ) {
-            SettingsScreen(
-                backStack = {
-                    navController.popBackStack()
-                }
-            )
-        }
-        composable(
-            route = DestinationsMenu.Help.route
-        ) {
-            HelpScreen(
-                backStack = {
-                    navController.popBackStack()
-                }
-            )
-        }
-    }
-}
Index: app/src/main/res/mipmap-anydpi-v26/ic_logo.xml
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_logo.xml b/app/src/main/res/mipmap-anydpi-v26/ic_logo.xml
deleted file mode 100644
--- a/app/src/main/res/mipmap-anydpi-v26/ic_logo.xml	
+++ /dev/null	
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@color/ic_logo_background"/>
-    <foreground android:drawable="@mipmap/ic_logo_foreground"/>
-</adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v33/ic_launcher.xml
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v33/ic_launcher.xml b/app/src/main/res/mipmap-anydpi-v33/ic_launcher.xml
deleted file mode 100644
--- a/app/src/main/res/mipmap-anydpi-v33/ic_launcher.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
-    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
-</adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v26/ic_logo_round.xml
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_logo_round.xml b/app/src/main/res/mipmap-anydpi-v26/ic_logo_round.xml
deleted file mode 100644
--- a/app/src/main/res/mipmap-anydpi-v26/ic_logo_round.xml	
+++ /dev/null	
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@color/ic_logo_background"/>
-    <foreground android:drawable="@mipmap/ic_logo_foreground"/>
-</adaptive-icon>
\ No newline at end of file
Index: app/src/main/java/com/example/fancywork/navegacion/DestinationsGraph.kt
===================================================================
diff --git a/app/src/main/java/com/example/fancywork/navegacion/DestinationsGraph.kt b/app/src/main/java/com/example/fancywork/navegacion/DestinationsGraph.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/fancywork/navegacion/DestinationsGraph.kt	
+++ /dev/null	
@@ -1,9 +0,0 @@
-package com.example.fancywork.navegacion
-
-sealed class DestinationsGraph(
-    val route: String,
-){
-    object Login: DestinationsGraph("login")
-    object Register: DestinationsGraph("register")
-    object Welcome: DestinationsGraph("welcome")
-}
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	
+++ b/build.gradle	
@@ -11,7 +11,7 @@
     }
 }// Top-level build file where you can add configuration options common to all sub-projects/modules.
 plugins {
-    id 'com.android.application' version '8.0.0' apply false
-    id 'com.android.library' version '8.0.0' apply false
+    id 'com.android.application' version '8.0.1' apply false
+    id 'com.android.library' version '8.0.1' apply false
     id 'org.jetbrains.kotlin.android' version '1.8.10' apply false
 }
\ No newline at end of file
Index: app/src/main/java/com/example/fancywork/navegation/DestinationsMain.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/fancywork/navegation/DestinationsMain.kt b/app/src/main/java/com/example/fancywork/navegation/DestinationsMain.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/example/fancywork/navegation/DestinationsMain.kt	
@@ -0,0 +1,10 @@
+package com.example.fancywork.navegation
+
+sealed class DestinationsMain(
+    val route: String,
+){
+    object Login: DestinationsMain("login")
+    object Register: DestinationsMain("register")
+    object Welcome: DestinationsMain("welcome")
+    object Main: DestinationsMain("main")
+}
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
--- a/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	
+++ b/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+    <background android:drawable="@color/ic_launcher_background"/>
+    <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
 </adaptive-icon>
\ No newline at end of file
Index: app/src/main/java/com/example/fancywork/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/fancywork/MainActivity.kt b/app/src/main/java/com/example/fancywork/MainActivity.kt
--- a/app/src/main/java/com/example/fancywork/MainActivity.kt	
+++ b/app/src/main/java/com/example/fancywork/MainActivity.kt	
@@ -3,7 +3,7 @@
 import android.os.Bundle
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
-import com.example.fancywork.navegacion.NavigationGraph
+import com.example.fancywork.navegation.NavigationGraph
 import com.example.fancywork.ui.theme.FancyWorkTheme
 import com.google.firebase.FirebaseApp
 
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
--- a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	
+++ b/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+    <background android:drawable="@color/ic_launcher_background"/>
+    <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
 </adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/values/ic_launcher_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/ic_launcher_background.xml b/app/src/main/res/values/ic_launcher_background.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/values/ic_launcher_background.xml	
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="ic_launcher_background">#F3F3F3</color>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/example/fancywork/screens/home/HomeViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/fancywork/screens/home/HomeViewModel.kt b/app/src/main/java/com/example/fancywork/screens/home/HomeViewModel.kt
--- a/app/src/main/java/com/example/fancywork/screens/home/HomeViewModel.kt	
+++ b/app/src/main/java/com/example/fancywork/screens/home/HomeViewModel.kt	
@@ -10,10 +10,8 @@
 import com.example.fancywork.reprository.Result
 import com.google.firebase.auth.FirebaseAuth
 import com.google.firebase.auth.GoogleAuthProvider
-import kotlinx.coroutines.delay
 import kotlinx.coroutines.flow.launchIn
 import kotlinx.coroutines.flow.onEach
-import kotlinx.coroutines.launch
 
 
 class HomeViewModel(
@@ -61,14 +59,9 @@
         }
     }
 
-    fun signOut(navigateWelcome: () -> Unit) = viewModelScope.launch {
+    fun signOut() {
         auth.signOut()
-        state.value = HomeState(isLoading = true)
-        delay(1000)
-        state.value = HomeState(isLoading = false)
-        navigateWelcome.invoke()
     }
-
 
     fun hideErrorDialog() {
         state.value = state.value.copy(
Index: app/src/main/java/com/example/fancywork/screens/home/HomeState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/fancywork/screens/home/HomeState.kt b/app/src/main/java/com/example/fancywork/screens/home/HomeState.kt
--- a/app/src/main/java/com/example/fancywork/screens/home/HomeState.kt	
+++ b/app/src/main/java/com/example/fancywork/screens/home/HomeState.kt	
@@ -2,9 +2,8 @@
 
 import com.example.fancywork.objects.User
 
-
 data class HomeState(
     val isLoading: Boolean = false,
     val user: User? = null,
-    val errorMessage: String? = null,
+    val errorMessage: String? = null
 )
Index: app/src/main/java/com/example/fancywork/screens/home/HomeScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/fancywork/screens/home/HomeScreen.kt b/app/src/main/java/com/example/fancywork/screens/home/HomeScreen.kt
--- a/app/src/main/java/com/example/fancywork/screens/home/HomeScreen.kt	
+++ b/app/src/main/java/com/example/fancywork/screens/home/HomeScreen.kt	
@@ -4,6 +4,8 @@
 import androidx.compose.foundation.background
 import androidx.compose.foundation.isSystemInDarkTheme
 import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.rememberScrollState
+import androidx.compose.foundation.verticalScroll
 import androidx.compose.material.icons.filled.*
 import androidx.compose.material.icons.outlined.*
 import androidx.compose.material3.*
@@ -19,7 +21,7 @@
 import com.example.fancywork.components.EventDialog
 import com.example.fancywork.components.HeadDrawer
 import com.example.fancywork.components.MainTopAppBar
-import com.example.fancywork.navegacion.DestinationsMenu
+import com.example.fancywork.navegation.Destinations
 import kotlinx.coroutines.launch
 
 @SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
@@ -27,26 +29,23 @@
 @Composable
 fun HomeScreen(
     homeViewModel: HomeViewModel,
-    navigateWelcome: () -> Unit,
     navController: NavHostController
 ) {
     val drawerState = rememberDrawerState(DrawerValue.Closed)
     val scope = rememberCoroutineScope()
-    val items = listOf(
-        DestinationsMenu.Home,
-        DestinationsMenu.Search,
-        DestinationsMenu.Post,
-        DestinationsMenu.Notifications,
-        DestinationsMenu.Profile,
-        DestinationsMenu.Settings,
-        DestinationsMenu.Help,
+    val itemsDrawer = listOf(
+        Destinations.Settings,
+        Destinations.Notifications,
+        Destinations.Help,
+        Destinations.SingOut
     )
+
     val darkTheme = isSystemInDarkTheme()
-
-    //val navBackStackEntry = navController.currentBackStackEntryAsState()
-    //val currentScreen = navBackStackEntry.value?.destination?.route
     val scrollBehavior = TopAppBarDefaults
     val state = homeViewModel.state
+    var name by remember { mutableStateOf("") }
+    var url by remember { mutableStateOf("") }
+    var email by remember { mutableStateOf("") }
 
     if (state.value.isLoading) {
         Surface(
@@ -61,9 +60,9 @@
             }
         }
     } else {
-        val name = state.value.user?.name
-        val url = state.value.user?.url
-        val email = state.value.user?.email
+        name = state.value.user?.name.toString()
+        url = state.value.user?.url.toString()
+        email = state.value.user?.email.toString()
 
         ModalNavigationDrawer(
             drawerState = drawerState,
@@ -80,17 +79,19 @@
                             email = email
                         )
                         Divider()
-                        items.forEach { item ->
-                            if (item.route == "settings") {
+                        itemsDrawer.forEach { item ->
+                            if (item.route == "welcome") {
                                 Divider()
                                 Spacer(Modifier.height(5.dp))
                             }
                             DrawerItem(
                                 item = item,
-                                //currentScreen = currentScreen,
                                 drawerState = drawerState,
                                 scope = scope
                             ) {
+                                if(item.route == "welcome"){
+                                    homeViewModel.signOut()
+                                }
                                 navController.navigate(item.route) {
                                     launchSingleTop = true
                                 }
@@ -106,7 +107,7 @@
                         drawerOpen = { scope.launch { drawerState.open() } },
                         scrollBehavior = scrollBehavior,
                         callback = {
-                            homeViewModel.signOut(navigateWelcome = navigateWelcome)
+                            //homeViewModel.signOut(navigateWelcome = navigateWelcome)
                         }
                     )
                 }
@@ -116,6 +117,7 @@
                         .fillMaxSize()
                         .padding(top = it.calculateTopPadding())
                         .background(if (darkTheme) Color.Black else Color.White)
+                        .verticalScroll(rememberScrollState())
                 ) {
 
                 }
@@ -129,4 +131,4 @@
             onDismiss = homeViewModel::hideErrorDialog
         )
     }
-}
+}
\ No newline at end of file
Index: app/src/main/java/com/example/fancywork/components/DrawerItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/fancywork/components/DrawerItem.kt b/app/src/main/java/com/example/fancywork/components/DrawerItem.kt
--- a/app/src/main/java/com/example/fancywork/components/DrawerItem.kt	
+++ b/app/src/main/java/com/example/fancywork/components/DrawerItem.kt	
@@ -11,17 +11,16 @@
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.text.font.FontWeight
-import com.example.fancywork.navegacion.DestinationsMenu
+import com.example.fancywork.navegation.Destinations
 import kotlinx.coroutines.CoroutineScope
 import kotlinx.coroutines.launch
 
 @Composable
 fun DrawerItem(
-    item: DestinationsMenu,
-    //currentScreen: String?,
+    item: Destinations,
     drawerState: DrawerState,
     scope: CoroutineScope,
-    callback: () -> Unit,
+    onClick: () -> Unit,
 ) {
     NavigationDrawerItem(
         modifier = Modifier
@@ -36,11 +35,10 @@
                 ),
             )
         },
-        //selected = currentScreen == item.route,
         selected = false,
         onClick = {
             scope.launch { drawerState.close() }
-            callback.invoke()
+            onClick.invoke()
         }
     )
 }
\ No newline at end of file
Index: app/src/main/java/com/example/fancywork/screens/main/MainScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/fancywork/screens/main/MainScreen.kt b/app/src/main/java/com/example/fancywork/screens/main/MainScreen.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/example/fancywork/screens/main/MainScreen.kt	
@@ -0,0 +1,111 @@
+package com.example.fancywork.screens.main
+
+import android.annotation.SuppressLint
+import androidx.compose.foundation.layout.*
+import androidx.compose.material.icons.filled.*
+import androidx.compose.material.icons.outlined.*
+import androidx.compose.material3.*
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.*
+import androidx.navigation.NavHostController
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.composable
+import androidx.navigation.compose.currentBackStackEntryAsState
+import androidx.navigation.compose.rememberNavController
+
+import com.example.fancywork.navegation.Destinations
+import com.example.fancywork.screens.home.HomeScreen
+import com.example.fancywork.screens.home.HomeViewModel
+import com.example.fancywork.screens.post.PostScreen
+import com.example.fancywork.screens.profile.ProfileScreen
+import com.example.fancywork.screens.search.SearchScreen
+
+@SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
+@Composable
+fun MainScreen(
+    mainNavController: NavHostController
+) {
+    val navController = rememberNavController()
+    val navBackStackEntry by navController.currentBackStackEntryAsState()
+    val currentRoute = navBackStackEntry?.destination?.route
+    val itemsBar = listOf(
+        Destinations.Home,
+        Destinations.Search,
+        Destinations.Post,
+        Destinations.Profile,
+    )
+
+    Scaffold(
+        bottomBar = {
+            NavigationBar {
+                itemsBar.forEach { item ->
+                    NavigationBarItem(
+                        icon = { Icon(item.icon, contentDescription = item.title) },
+                        label = { Text(item.title) },
+                        selected = currentRoute == item.route,
+                        onClick = {
+                            navController.navigate(item.route) {
+                                launchSingleTop = true
+                            }
+                        }
+                    )
+                }
+            }
+        }
+    ) {
+        NavigationGraph(
+            navController = navController,
+            mainNavController = mainNavController
+        )
+    }
+}
+
+@Composable
+fun NavigationGraph(
+    navController: NavHostController,
+    mainNavController: NavHostController
+) {
+    NavHost(
+        navController = navController,
+        startDestination = Destinations.Home.route
+    ) {
+        composable(
+            route = Destinations.Home.route
+        ) {
+            HomeScreen(
+                homeViewModel = HomeViewModel(),
+                navController = mainNavController
+            )
+        }
+        composable(
+            route = Destinations.Search.route
+        ) {
+            SearchScreen(
+                backStack = {
+                    navController.popBackStack()
+                }
+            )
+        }
+        composable(
+            route = Destinations.Post.route
+        ) {
+            PostScreen(
+                backStack = {
+                    navController.popBackStack()
+                }
+            )
+        }
+        composable(
+            route = Destinations.Profile.route
+        ) {
+            ProfileScreen(
+                backStack = {
+                    navController.popBackStack()
+                }
+            )
+        }
+    }
+}
+
+
+
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	
+++ b/app/build.gradle	
@@ -51,25 +51,25 @@
     implementation 'androidx.core:core-ktx:1.10.0'
     implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
     implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1"
-    implementation 'androidx.activity:activity-compose:1.7.0'
-    implementation "androidx.compose.ui:ui:1.4.1"
-    implementation "androidx.compose.ui:ui-tooling-preview:1.4.1"
-    implementation "androidx.compose.compiler:compiler:1.4.5"
-    implementation 'androidx.compose.material3:material3:1.1.0-beta02'
+    implementation 'androidx.activity:activity-compose:1.7.1'
+    implementation "androidx.compose.ui:ui:1.4.3"
+    implementation "androidx.compose.ui:ui-tooling-preview:1.4.3"
+    implementation "androidx.compose.compiler:compiler:1.4.7"
+    implementation 'androidx.compose.material3:material3:1.1.0-rc01'
     implementation "androidx.compose.material3:material3-window-size-class:1.0.1"
 
     implementation 'com.google.firebase:firebase-analytics:21.2.2'
-    implementation 'com.google.firebase:firebase-auth-ktx:21.3.0'
-    implementation 'com.google.firebase:firebase-firestore-ktx:24.5.0'
+    implementation 'com.google.firebase:firebase-auth-ktx:22.0.0'
+    implementation 'com.google.firebase:firebase-firestore-ktx:24.6.0'
     implementation 'com.google.android.gms:play-services-auth:20.5.0'
     implementation 'com.github.stevdza-san:OneTapCompose:1.0.0'
 
     testImplementation 'junit:junit:4.13.2'
     androidTestImplementation 'androidx.test.ext:junit:1.1.5'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
-    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.4.1"
-    debugImplementation "androidx.compose.ui:ui-tooling:1.4.1"
-    debugImplementation "androidx.compose.ui:ui-test-manifest:1.4.1"
+    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.4.3"
+    debugImplementation "androidx.compose.ui:ui-tooling:1.4.3"
+    debugImplementation "androidx.compose.ui:ui-test-manifest:1.4.3"
 
     implementation "com.google.accompanist:accompanist-systemuicontroller:0.30.0"
     implementation "androidx.navigation:navigation-compose:2.5.3"
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -8,7 +8,7 @@
         android:allowBackup="true"
         android:dataExtractionRules="@xml/data_extraction_rules"
         android:fullBackupContent="@xml/backup_rules"
-        android:icon="@mipmap/ic_logo"
+        android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
         android:supportsRtl="true"
         android:theme="@style/Theme.FancyWork"
Index: app/src/main/java/com/example/fancywork/navegation/NavigationMain.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/fancywork/navegation/NavigationMain.kt b/app/src/main/java/com/example/fancywork/navegation/NavigationMain.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/example/fancywork/navegation/NavigationMain.kt	
@@ -0,0 +1,124 @@
+package com.example.fancywork.navegation
+
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.LaunchedEffect
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.composable
+import androidx.navigation.compose.rememberNavController
+import com.example.fancywork.screens.help.HelpScreen
+import com.example.fancywork.screens.main.MainScreen
+import com.example.fancywork.screens.notifications.NotificationScreen
+import com.example.fancywork.screens.settings.SettingsScreen
+import com.example.fancywork.screens.login.LoginScreen
+import com.example.fancywork.screens.login.LoginViewModel
+import com.example.fancywork.screens.register.RegisterScreen
+import com.example.fancywork.screens.register.RegisterViewModel
+import com.example.fancywork.screens.welcome.WelcomeScreen
+import com.example.fancywork.screens.welcome.WelcomeViewModel
+import com.google.firebase.auth.FirebaseAuth
+
+@Composable
+fun NavigationGraph() {
+    val navController = rememberNavController()
+    val auth = FirebaseAuth.getInstance()
+
+    NavHost(
+        navController = navController,
+        startDestination = DestinationsMain.Welcome.route
+    ) {
+        composable(
+            route = DestinationsMain.Login.route
+        ) {
+            LoginScreen(
+                loginViewModel = LoginViewModel(),
+                navigateWelcome = {
+                    navController.popBackStack()
+                },
+                navigateRegister = {
+                    navController.navigate(DestinationsMain.Register.route){
+                        launchSingleTop = true
+                    }
+                },
+                navigateMain = {
+                    navController.navigate(DestinationsMain.Main.route) {
+                        launchSingleTop = true
+                    }
+                }
+            )
+        }
+        composable(
+            route = DestinationsMain.Register.route
+        ) {
+            RegisterScreen(
+                navigateLogin = {
+                    navController.popBackStack()
+                },
+                registerViewModel = RegisterViewModel(),
+                navigateMain = {
+                    navController.navigate(DestinationsMain.Main.route) {
+                        launchSingleTop = true
+                    }
+                }
+            )
+        }
+        composable(
+            route = DestinationsMain.Main.route
+        ) {
+            MainScreen(
+                mainNavController = navController
+            )
+        }
+        composable(
+            route = DestinationsMain.Welcome.route
+        ) {
+            if (auth.currentUser != null) {
+                LaunchedEffect(key1 = Unit) {
+                    navController.navigate(DestinationsMain.Main.route) {
+                        launchSingleTop = true
+                    }
+                }
+            } else {
+                WelcomeScreen(
+                    navigateLogin = {
+                        navController.navigate(DestinationsMain.Login.route){
+                            launchSingleTop = true
+                        }
+                    },
+                    welcomeViewModel = WelcomeViewModel(),
+                    navigate = {
+                        navController.navigate(DestinationsMain.Main.route) {
+                            launchSingleTop = true
+                        }
+                    }
+                )
+            }
+        }
+        composable(
+            route = Destinations.Notifications.route
+        ) {
+            NotificationScreen(
+                backStack = {
+                    navController.popBackStack()
+                }
+            )
+        }
+        composable(
+            route = Destinations.Settings.route
+        ) {
+            SettingsScreen(
+                backStack = {
+                    navController.popBackStack()
+                }
+            )
+        }
+        composable(
+            route = Destinations.Help.route
+        ) {
+            HelpScreen(
+                backStack = {
+                    navController.popBackStack()
+                }
+            )
+        }
+    }
+}
